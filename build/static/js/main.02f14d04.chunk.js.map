{"version":3,"sources":["components/logo.png","components/static/imagen1.svg","components/static/imagen2.svg","components/static/imagen3.svg","components/static/imagen4.svg","components/localstorage.jsx","components/grafico.jsx","components/graficoindice.jsx","components/indiceerror.jsx","components/informacion.jsx","components/conclusion.jsx","components/pdf2.jsx","components/instrucciones.jsx","components/tabla-core.jsx","components/principal.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","useLocalStorage","key","defaultValue","_useState","useState","value","JSON","parse","window","localStorage","getItem","stringify","e","_useState2","Object","slicedToArray","state","setState","useEffect","setItem","Grafico","props","data","eta","errortotal","info","dataX","dataY","i","length","push","x","y","isNaN","valorMax","Math","max","apply","maxUp","maxDown","pendienteUp","central","lineaUp","lineaDown","react_default","a","createElement","style","textAlign","es6","id","width","height","debounce","margin","top","right","bottom","left","strokeDasharray","type","dataKey","name","unit","domain","offset","position","angle","cursor","fill","line","stroke","strokeWidth","isAnimationActive","GraficoIndice","indices","dataGrafico","map","item","index","parseInt","equipoX","react","ticks","alwaysShow","variantIndice","abs","IndiceError","arr","filteredIndices","filter","minIndex","min","toConsumableArray","maxIndex","average","reduce","b","averageIndex","Number","toFixed","Paper","className","ImageList","rowHeight","Chip","avatar","Avatar","label","color","variant","Grid","container","spacing","direction","justifyContent","alignItems","xs","Divider","orientation","Informacion","infor","handleEquipo1","handleEquipo2","handleAnalito","handleUmedida","equipo1","setEquipo1","_useState3","_useState4","equipo2","setEquipo2","_useState5","_useState6","analito","setAnalito","_useState7","_useState8","umedida","setUmedida","InputBase","fullWidth","onChange","target","onBlur","Conclusion","errores","conclusion","background","datos","datosX","datosY","shift","result","regression","linear","varianceX","variance","varianceY","meanX","mean","meanY","lambda","dU","sum","w","square","dQ","z","dP","r","t","dPendiente","divide","sqrt","dIntercepto","n","jackknifeEstimates","_loop","datosXWithoutI","slice","concat","datosYWithoutI","varianceXWithoutI","varianceYWithoutI","meanXWithoutI","meanYWithoutI","lambdaWithoutI","dUWithoutI","dQWithoutI","dPWithoutI","slopeWithoutI","interceptWithoutI","slope","intercept","jackknifeSlope","estimate","jackknifeIntercept","jackknifeVarianceSlope","jackknifeVarianceIntercept","ciSlope","ciIntercept","seSlope","seIntercept","equation","r2","ComponentToPrint","_React$Component","inherits","_super","createSuper","classCallCheck","this","arguments","createClass","data2","datum","valorMaxY","infografico","datasets","showLine","pointBackgroundColor","pointRadius","backgroundColor","options","title","display","text","fontColor","fontSize","fontStyle","legend","scales","yAxes","gridLines","scaleLabel","labelString","xAxes","infografico2","alt","src","toUpperCase","scope","React","Component","Pdf2","componentRef","useRef","lib_default","trigger","Button","content","current","pdf2_ComponentToPrint","ref","Transition","forwardRef","Grow","assign","timeout","Instrucciones","open","setOpen","handleClose","icon","MenuBook_default","clickable","onClick","Dialog","fullScreen","onClose","TransitionComponent","react_id_swiper_lib_default","centeredSlides","speed","pagination","el","navigation","nextEl","prevEl","imagen1","imagen2","imagen3","imagen4","columns","editable","frozen","rows","Array","from","_","muestra","equipoY","Contenido","_useLocalStorage","_useLocalStorage2","setEta","_useLocalStorage3","_useLocalStorage4","filas","setFilas","_useLocalStorage5","_useLocalStorage6","_useLocalStorage7","_useLocalStorage8","_useLocalStorage9","_useLocalStorage10","_useLocalStorage11","_useLocalStorage12","fila","acc","parseFloat","indicesN","values","err","AppBar","md","Logo","instrucciones","informacion","Slider","aria-labelledby","valueLabelDisplay","step","onChangeCommitted","v","react_data_grid_default","rowGetter","rowsCount","onGridRowsUpdated","_ref","fromRow","toRow","updated","objectSpread2","onRowsRendered","_ref2","stopIndex","ReactDataGrid","scrollToRow","enableCellSelect","rowSelection","enableRowSelect","minHeight","ButtonGroup","confirm","newRow","grafico","indiceerror","components_conclusion","graficoindice","pdf2","MenuLateral","padding","tabla_core","App","document","getElementById","remove","principal","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.02f14d04.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.09605d76.png\";","module.exports = __webpack_public_path__ + \"static/media/imagen1.ef575464.svg\";","module.exports = __webpack_public_path__ + \"static/media/imagen2.248ab658.svg\";","module.exports = __webpack_public_path__ + \"static/media/imagen3.8c2cfdd3.svg\";","module.exports = __webpack_public_path__ + \"static/media/imagen4.2f0615cb.svg\";","import {useState, useEffect} from 'react';\r\n\r\nexport function useLocalStorage(key, defaultValue) {\r\n    const [state, setState] = useState(() => {\r\n      let value\r\n      try {\r\n        value = JSON.parse(\r\n          window.localStorage.getItem(key) || JSON.stringify(defaultValue),\r\n        )\r\n      } catch (e) {\r\n        value = defaultValue\r\n      }\r\n      return value\r\n    })\r\n  \r\n    useEffect(\r\n      () => {\r\n        window.localStorage.setItem(key, JSON.stringify(state))\r\n      },\r\n      // eslint-disable-next-line\r\n      [state],\r\n    )\r\n    return [state, setState]\r\n  }\r\n\r\nexport default useLocalStorage;","import React from \"react\";\r\nimport {\r\n  ScatterChart,\r\n  Scatter,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  Label\r\n} from \"recharts\";\r\n\r\nconst Grafico = (props) => {\r\n  const data = props.data;\r\n  const eta = props.errortotal;\r\n  const info = props.info;\r\n  \r\n  // create arrays for the x and y values\r\n  var dataX = [], dataY = [];\r\n  for (let i = 0; i < data.length; i++) {\r\n    dataX.push(data[i].x);\r\n    dataY.push(data[i].y);\r\n  }\r\n\r\n  // handle NaN values in the dataX array\r\n  for (let i = 0; i < dataX.length; i++) {\r\n    if (isNaN(dataX[i])) {\r\n      dataX[i] = 0;\r\n    }\r\n  }\r\n\r\n  // calculate the max value for the x and y arrays\r\n  var valorMax = Math.max(...dataX);\r\n  var valorMaxY = Math.max(...dataY);\r\n\r\n  // calculate the maxUp and maxDown values\r\n  var maxUp = valorMax + (valorMax * (eta / 100));\r\n  var maxDown = valorMax - (valorMax * (eta / 100));\r\n\r\n  // calculate the pendienteUp value\r\n  const pendienteUp = 1 + (1 * (eta / 100));\r\n\r\n  // create the central array\r\n  const central = [{x: 0, y: 0}, {x: valorMax, y: valorMax}];\r\n\r\n  // create the lineaUp array\r\n  var lineaUp = [];\r\n  if (valorMaxY > valorMax) {\r\n    lineaUp.push({x: 0, y: 0}, {x: valorMax, y: maxUp});\r\n  } else {\r\n    lineaUp.push({x: 0, y: 0}, {x: (valorMax / pendienteUp), y: valorMax});\r\n  }\r\n\r\n  // create the lineaDown array\r\n  const lineaDown = [{x: 0, y: 0}, {x: valorMax, y: maxDown}];\r\n\r\n  return (\r\n      <div>\r\n        <h5 style={{textAlign: \"center\"}}>Diagrama de Dispersión</h5>\r\n        <hr/>\r\n        <ResponsiveContainer id=\"grafico-dispersion\" width=\"100%\" height={348} debounce={1}>\r\n            <ScatterChart margin={{ top: 15, right: 5, bottom: 15, left: 5 }}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis type=\"number\" dataKey=\"x\" name={info[0]} unit=\"\" domain={[0, 'dataMax'] } >\r\n                  <Label value={info[0] + \" (\" + info[3] + \")\"} offset={-10} position=\"insideBottom\" />\r\n                </XAxis>\r\n                <YAxis type=\"number\" dataKey=\"y\" name={info[1]} unit=\"\" domain={[0, 'dataMax - 100']}>\r\n                  <Label value={info[1] + \" (\" + info[3] + \")\"} offset={5} position=\"insideLeft\" angle={-90} />\r\n                </YAxis>\r\n                <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\r\n                <Scatter name=\"Valores\" data={data} fill=\"#8884d8\" />\r\n                <Scatter name=\"Linea Central\" data={central} fill=\"#8884d8\" line={{stroke: 'blue', strokeWidth: 0.5}} />\r\n                <Scatter name=\"Limite Superior\" data={lineaUp} fill=\"#8884d8\" line={{stroke: 'blue', strokeWidth: 2, isAnimationActive: 'true'}} />\r\n                <Scatter name=\"Limite Inferior\" data={lineaDown} fill=\"#8884d8\" line={{stroke: 'blue', strokeWidth: 2}} />\r\n            </ScatterChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Grafico;\r\n\r\n","import React, {Fragment} from \"react\";\r\nimport {\r\n  ScatterChart,\r\n  Scatter,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  ReferenceLine,\r\n  Label\r\n} from \"recharts\";\r\n\r\nconst GraficoIndice = props => {\r\n    const data = props.data;\r\n    const indices = props.indices;\r\n    const info = props.info;\r\n\r\n    const dataGrafico = data.map((item, index) => ({\r\n      x: parseInt(item.equipoX),\r\n      y: indices[index]\r\n    }));\r\n\r\n  return (\r\n    <Fragment>\r\n      <h5 style={{textAlign: \"center\"}}>Diagrama de Bland-Altman</h5>\r\n      <hr/>\r\n      <ResponsiveContainer width=\"100%\" height={305}>\r\n          <ScatterChart margin={{ top: 1, right: -5, bottom: 15, left: 1 }}>\r\n            <CartesianGrid strokeDasharray=\"3 3\"/>\r\n            <XAxis type=\"number\" dataKey=\"x\" name={info[0]} unit=\"\" >\r\n              <Label value={info[0] + \" (\" + info[3] + \")\"} offset={-10} position=\"insideBottom\" />\r\n            </XAxis>\r\n            <YAxis type=\"number\" dataKey=\"y\" name=\"Indice de Error\" unit=\"\" ticks={[-1, 0, 1]} >\r\n              <Label value=\"Indice de Error\" offset={25} position=\"insideBottomLeft\" angle={-90} />\r\n            </YAxis>\r\n            <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\r\n            <Scatter name=\"A school\" data={dataGrafico} fill=\"#8884d8\" />\r\n            <ReferenceLine y={1} stroke=\"blue\" strokeWidth={2} alwaysShow={true}/>\r\n            <ReferenceLine y={0} stroke=\"blue\" strokeWidth={0.5} alwaysShow={true}/>\r\n            <ReferenceLine y={-1} stroke=\"blue\" strokeWidth={2} alwaysShow={true}/>\r\n          </ScatterChart>\r\n      </ResponsiveContainer>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default GraficoIndice;\r\n","import React, {Fragment} from \"react\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ImageList from '@material-ui/core/ImageList';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nconst colorIndice = (x) => {\r\n  return (isNaN(x) ? \"default\" : (Math.abs(x) > 1 ? \"secondary\" : \"primary\"));\r\n}; //si el indice es mayor a 1 se coloca color secondary que es rojo si es menor se coloca primary que es azul\r\n\r\nconst variantIndice = (x) => {\r\n  return (isNaN(x) ? \"default\" : (Math.abs(x) > 1 ? \"default\" : \"outlined\"));\r\n}; //lo mismo de arriba\r\n\r\nconst IndiceError = props => {\r\n    const indices = props.indices.map((value) => (isNaN(value) ? \"-\" : value));\r\n    const arrPromedio = (arr) => arr.reduce((a,b) => a + b, 0) / arr.length\r\n\r\n    // remove the NaN values from the indices array using the filter() method\r\n    const filteredIndices = indices.filter((value) => !isNaN(value));\r\n\r\n    // find the minimum and maximum values in the filteredIndices array\r\n    const minIndex = filteredIndices.length ? Math.min(...filteredIndices) : \"-\";\r\n    const maxIndex = filteredIndices.length ? Math.max(...filteredIndices) : \"-\";\r\n\r\n      // calculate the average of the filteredIndices array, and provide a default value of \"-\" if the result is NaN\r\n    const average = arrPromedio(filteredIndices);\r\n    const averageIndex = Number.isNaN(average) ? \"-\" : average.toFixed(2);\r\n    \r\n    return (\r\n      <Fragment >\r\n        <Paper className=\"p-4\">\r\n          <h5 style={{textAlign: \"center\"}}>Indices de Error </h5>\r\n          <hr/>\r\n          {/* Aca comienza la lista de indices de error */}\r\n          <ImageList style={{ textAlign: \"center\" }} rowHeight={34.67}>\r\n            {indices.map((index, i) => (\r\n              <div className=\"p\" key={i}>\r\n                <Chip\r\n                  avatar={<Avatar>{i + 1}</Avatar>}\r\n                  label={index}\r\n                  color={colorIndice(index)}\r\n                  variant={variantIndice(index)}\r\n                />\r\n              </div>\r\n            ))}\r\n          </ImageList>\r\n          {/* Aca termina la lista de indices de error */}\r\n          <Grid className=\"mt-2\" container spacing={1} style={{textAlign: \"center\"}}>\r\n            <Grid container direction=\"row\" justifyContent=\"center\" className=\"pb-1\" alignItems=\"stretch\">\r\n              <Grid item xs={6} ><Paper className=\"p-2\" >Rango</Paper></Grid>\r\n              <Divider orientation=\"vertical\"/>\r\n              <Grid item xs={5} ><Paper className=\"p-2\" style={{height: \"100%\"}}>{minIndex} a {maxIndex}</Paper></Grid>\r\n            </Grid>\r\n            <Grid container direction=\"row\" justifyContent=\"center\" className=\"pb-1\" alignItems=\"stretch\">\r\n              <Grid item xs={6} ><Paper className=\"p-2\">Promedio</Paper></Grid>\r\n              <Divider orientation=\"vertical\"/>\r\n              <Grid item xs={5} ><Paper className=\"p-2\" style={{height: \"100%\"}}>{averageIndex}</Paper></Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Fragment>\r\n    )};\r\n\r\nexport default IndiceError;","import React, {Fragment, useState} from \"react\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nconst Informacion = props => {\r\n    const infor = props.info;\r\n    const handleEquipo1 = props.handleEquipo1;\r\n    const handleEquipo2 = props.handleEquipo2;\r\n    const handleAnalito = props.handleAnalito;\r\n    const handleUmedida = props.handleUmedida;\r\n    \r\n    const [equipo1, setEquipo1] = useState(infor[0]);\r\n    const [equipo2, setEquipo2] = useState(infor[1]);\r\n    const [analito, setAnalito] = useState(infor[2]);\r\n    const [umedida, setUmedida] = useState(infor[3]);\r\n\r\n    const hEquipo1 = (e) => {\r\n      setEquipo1(e.target.value)\r\n    }\r\n    \r\n    const hEquipo2 = (e) => {\r\n      setEquipo2(e.target.value)\r\n    }\r\n\r\n    const hAnalito = (e) => {\r\n      setAnalito(e.target.value)\r\n    }\r\n\r\n    const hUmedida = (e) => {\r\n      setUmedida(e.target.value)\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <h5 style={{textAlign:\"center\"}}>Información del Estudio</h5>\r\n        <hr/>\r\n        <Grid container spacing={1} style={{textAlign: \"center\"}}>\r\n            <Grid container justifyContent=\"center\" className=\"pb-1\" alignItems=\"stretch\">\r\n              <Grid item xs={6} ><Paper className=\"p-3\" >Equipo X</Paper></Grid>\r\n              <Divider orientation=\"vertical\"/>\r\n              <Grid item xs={5} ><Paper className=\"inputFocus\"><InputBase fullWidth={true} onChange={hEquipo1} onBlur={handleEquipo1} value={equipo1}/></Paper></Grid>\r\n            </Grid>\r\n            <Grid container justifyContent=\"center\" className=\"pb-1\">\r\n              <Grid item xs={6} ><Paper className=\"p-3\">Equipo Y</Paper></Grid>\r\n              <Divider orientation=\"vertical\"/>\r\n              <Grid item xs={5} ><Paper><InputBase fullWidth={true} onChange={hEquipo2} onBlur={handleEquipo2} value={equipo2}/></Paper></Grid>\r\n            </Grid>\r\n            <Grid container justifyContent=\"center\" className=\"pb-1\">\r\n              <Grid item xs={6} ><Paper className=\"p-3\">Analito</Paper></Grid>\r\n              <Divider orientation=\"vertical\"/>\r\n              <Grid item xs={5} ><Paper><InputBase fullWidth={true} onChange={hAnalito} onBlur={handleAnalito} value={analito}/></Paper></Grid>\r\n            </Grid>\r\n            <Grid container justifyContent=\"center\" className=\"pb-1\">\r\n              <Grid item xs={6} ><Paper className=\"p-3\">Unidad de Medida</Paper></Grid>\r\n              <Divider orientation=\"vertical\"/>\r\n              <Grid item xs={5} ><Paper><InputBase fullWidth={true} onChange={hUmedida} onBlur={handleUmedida} value={umedida}/></Paper></Grid>\r\n            </Grid>\r\n          </Grid>\r\n      </Fragment>\r\n    );\r\n};\r\n\r\nexport default Informacion;\r\n","import React, {Fragment} from \"react\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport regression from 'regression';\r\nimport { variance, mean, square, sum, sqrt, divide } from 'mathjs'\r\n\r\nconst fondo = (c) => {\r\n  return c === \"Si\" ? {background: \"#A4F9CE\", height: \"100%\"} : {background: \"#F9A4A4\", height: \"100%\"};\r\n}\r\n\r\nconst Conclusion = (props) => {\r\n  const errores = props.errores;\r\n  const conclusion = props.conclusion;\r\n  const color = fondo(conclusion(errores))\r\n  const data = props.data;\r\n\r\n  const datos = [];\r\n  for (let i = 0; i < data.length; i++) {\r\n    // Check if the x and y values are not NaN\r\n    if (!isNaN(data[i].x) && !isNaN(data[i].y)) {\r\n      datos.push([data[i].x, data[i].y]);\r\n    }\r\n  }\r\n\r\n  const datosX = [1,2];\r\n  const datosY = [1,2];\r\n  if (datos.length > 1) {\r\n    // Remove the first two elements from each array\r\n    datosX.shift();\r\n    datosX.shift();\r\n    datosY.shift();\r\n    datosY.shift();\r\n\r\n    // Loop through the data and add the values to the arrays\r\n    for (let i = 0; i < datos.length; i++) {\r\n      datosX.push(datos[i][0]);\r\n      datosY.push(datos[i][1]);\r\n    }\r\n  }\r\n  \r\n  // REGRESION LINEAL\r\n\r\n  const result = regression.linear(datos);\r\n\r\n  // REGRESION DE DEMING\r\n\r\n  const varianceX = variance(datosX);\r\n  const varianceY = variance(datosY);\r\n  const meanX = mean(datosX);\r\n  const meanY = mean(datosY);\r\n  const lambda = varianceX / varianceY;\r\n\r\n  const restaX = (w) => square(w - meanX);\r\n  const restaY = (z) => square(z - meanY);\r\n  const multi = (r, t) => (r - meanX) * (t - meanY);\r\n\r\n  const dU = sum(datosX.map(restaX));\r\n  const dQ = sum(datosY.map(restaY));\r\n  const dP = sum(datosX.map((x, i) => multi(x, datosY[i])));\r\n\r\n  const dPendiente = divide(((lambda * dQ) - dU) + (sqrt((square(dU - (lambda * dQ))) + (4 * lambda * square(dP)))), 2 * lambda * dP);\r\n  const dIntercepto = meanY - (dPendiente * meanX);\r\n\r\n  // FIN\r\n\r\n  // Calculate the jackknife estimates of the slope and intercept\r\n  const n = datosX.length;\r\n  const jackknifeEstimates = [];\r\n  for (let i = 0; i < n; i++) {\r\n      // Remove the ith data point from the dataset\r\n      const datosXWithoutI = datosX.slice(0, i).concat(datosX.slice(i + 1));\r\n      const datosYWithoutI = datosY.slice(0, i).concat(datosY.slice(i + 1));\r\n      \r\n      // Calculate the slope and intercept for the remaining data points\r\n      const varianceXWithoutI = variance(datosXWithoutI);\r\n      const varianceYWithoutI = variance(datosYWithoutI);\r\n      const meanXWithoutI = mean(datosXWithoutI);\r\n      const meanYWithoutI = mean(datosYWithoutI);\r\n      const lambdaWithoutI = varianceXWithoutI / varianceYWithoutI;\r\n      const restaXWithoutI = (w) => square(w - meanXWithoutI);\r\n      const restaYWithoutI = (z) => square(z - meanYWithoutI);\r\n      const multiWithoutI = (r, t) => (r - meanXWithoutI) * (t - meanYWithoutI);\r\n      const dUWithoutI = sum(datosXWithoutI.map(restaXWithoutI));\r\n      const dQWithoutI = sum(datosYWithoutI.map(restaYWithoutI));\r\n      const dPWithoutI = sum(datosXWithoutI.map((x, i) => multiWithoutI(x, datosYWithoutI[i])));\r\n      const slopeWithoutI = divide(((lambdaWithoutI * dQWithoutI) - dUWithoutI) + (sqrt((square(dUWithoutI - (lambdaWithoutI * dQWithoutI))) + (4 * lambdaWithoutI * square(dPWithoutI)))), 2 * lambdaWithoutI * dPWithoutI);\r\n      const interceptWithoutI = meanYWithoutI - (slopeWithoutI * meanXWithoutI);\r\n      \r\n      // Save the estimated slope and intercept\r\n      jackknifeEstimates.push({slope: slopeWithoutI, intercept: interceptWithoutI});\r\n  }\r\n\r\n  // Calculate the jackknife estimate of the slope and intercept\r\n  const jackknifeSlope = mean(jackknifeEstimates.map(estimate => estimate.slope));\r\n  const jackknifeIntercept = mean(jackknifeEstimates.map(estimate => estimate.intercept));\r\n\r\n  // Calculate the jackknife variance of the slope and intercept\r\n  const jackknifeVarianceSlope = mean(jackknifeEstimates.map(estimate => square(estimate.slope - jackknifeSlope)));\r\n  const jackknifeVarianceIntercept = mean(jackknifeEstimates.map(estimate => square(estimate.intercept - jackknifeIntercept)));\r\n\r\n  // Calculate the 95% confidence interval N -2 for the slope and intercept\r\n  const ciSlope = [jackknifeSlope - (1.96 * Math.sqrt(jackknifeVarianceSlope)), jackknifeSlope + (1.96 * Math.sqrt(jackknifeVarianceSlope))];\r\n  const ciIntercept = [jackknifeIntercept - (1.96 * Math.sqrt(jackknifeVarianceIntercept)), jackknifeIntercept + (1.96 * Math.sqrt(jackknifeVarianceIntercept))];\r\n\r\n  // Calculate the standard error of the slope and intercept\r\n  const seSlope = Math.sqrt(jackknifeVarianceSlope);\r\n  const seIntercept = Math.sqrt(jackknifeVarianceIntercept);\r\n\r\n    return (\r\n      <Fragment>\r\n        <h5 style={{textAlign: \"center\"}}>Conclusión</h5>\r\n        <hr/>\r\n        <Grid container spacing={1} style={{textAlign: \"center\"}}>\r\n            <Grid container direction=\"row\" justifyContent=\"center\" className=\"pb-1\" alignItems=\"stretch\">\r\n              <Grid item xs={6} ><Paper className=\"p-3\" >¿Aprueban?</Paper></Grid>\r\n              <Divider orientation=\"vertical\"/>\r\n              <Grid item xs={5} ><Paper className=\"p-3\" style={color}>{conclusion(errores)}</Paper></Grid>\r\n            </Grid>\r\n            <Grid container direction=\"row\" justifyContent=\"center\" className=\"pb-1\" alignItems=\"stretch\">\r\n              <Grid item xs={6} ><Paper className=\"p-3\">{\">\"}Eta</Paper></Grid>\r\n              <Divider orientation=\"vertical\"/>\r\n              <Grid item xs={5} ><Paper className=\"p-3\" style={{height: \"100%\"}}>{errores.length}</Paper></Grid>\r\n            </Grid>\r\n            <Grid item xs={12}><hr/><h6 style={{textAlign: \"center\"}}>Regresión Linear</h6><hr/></Grid>\r\n            <Grid container direction=\"row\" justifyContent=\"center\" className=\"pb-1\" alignItems=\"stretch\">\r\n              <Grid item xs={6} ><Paper className=\"p-3\">Pendiente</Paper></Grid>\r\n              <Divider orientation=\"vertical\"/>\r\n              <Grid item xs={5} ><Paper className=\"p-3\" style={{height: \"100%\"}}>{result.equation[0]}</Paper></Grid>\r\n            </Grid>\r\n            <Grid container direction=\"row\" justifyContent=\"center\" className=\"pb-1\" alignItems=\"stretch\">\r\n              <Grid item xs={6} ><Paper className=\"p-3\">Intercepto</Paper></Grid>\r\n              <Divider orientation=\"vertical\"/>\r\n              <Grid item xs={5} ><Paper className=\"p-3\" style={{height: \"100%\"}}>{result.equation[1]}</Paper></Grid>\r\n            </Grid>\r\n            <Grid container direction=\"row\" justifyContent=\"center\" className=\"pb-1\" alignItems=\"stretch\">\r\n              <Grid item xs={6} ><Paper className=\"p-3\">R2</Paper></Grid>\r\n              <Divider orientation=\"vertical\"/>\r\n              <Grid item xs={5} ><Paper className=\"p-3\" style={{height: \"100%\"}}>{result.r2}</Paper></Grid>\r\n            </Grid>\r\n            <Grid item xs={12}><hr/><h6 style={{textAlign: \"center\"}}>Regresión de Deming</h6><hr/></Grid>\r\n            <Grid container direction=\"row\" justifyContent=\"center\" className=\"pb-1\" alignItems=\"stretch\">\r\n              <Grid item xs={3} ><Paper className=\"p-3\">Parametros</Paper></Grid>\r\n              <Divider orientation=\"vertical\"/>\r\n              <Grid item xs={2} ><Paper className=\"p-3\" style={{height: \"100%\"}}>Valor</Paper></Grid>\r\n              <Grid item xs={2} ><Paper className=\"p-3\" style={{height: \"100%\"}}>StdError</Paper></Grid>\r\n              <Grid item xs={4} ><Paper className=\"p-3\" style={{height: \"100%\"}}>IC95%</Paper></Grid>\r\n            </Grid>\r\n            <Grid container direction=\"row\" justifyContent=\"center\" className=\"pb-1\" alignItems=\"stretch\">\r\n              <Grid item xs={3} ><Paper className=\"p-3\">Pendiente</Paper></Grid>\r\n              <Divider orientation=\"vertical\"/>\r\n              <Grid item xs={2} ><Paper className=\"p-3\" style={{height: \"100%\"}}>{dPendiente.toFixed(5)}</Paper></Grid>\r\n              <Grid item xs={2} ><Paper className=\"p-3\" style={{height: \"100%\"}}>{seSlope.toFixed(3)}</Paper></Grid>\r\n              <Grid item xs={4} ><Paper className=\"p-3\" style={{height: \"100%\"}}>{ciSlope[0].toFixed(5) + \" a \" + ciSlope[1].toFixed(5)}</Paper></Grid>\r\n            </Grid>\r\n            <Grid container direction=\"row\" justifyContent=\"center\" className=\"pb-1\" alignItems=\"stretch\">\r\n              <Grid item xs={3} ><Paper className=\"p-3\">Intercepto</Paper></Grid>\r\n              <Divider orientation=\"vertical\"/>\r\n              <Grid item xs={2} ><Paper className=\"p-3\" style={{height: \"100%\"}}>{dIntercepto.toFixed(2)}</Paper></Grid>\r\n              <Grid item xs={2} ><Paper className=\"p-3\" style={{height: \"100%\"}}>{seIntercept.toFixed(3)}</Paper></Grid>\r\n              <Grid item xs={4} ><Paper className=\"p-3\" style={{height: \"100%\"}}>{ciIntercept[0].toFixed(2) + \" a \" + ciIntercept[1].toFixed(2)}</Paper></Grid>\r\n            </Grid>\r\n          </Grid>\r\n      </Fragment>\r\n    );\r\n};\r\n\r\nexport default Conclusion;","import React, {Fragment, useRef} from \"react\";\r\nimport ReactToPrint from 'react-to-print';\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\n\r\nclass ComponentToPrint extends React.Component {\r\n    render() {\r\n      const data = this.props.data;\r\n      const info = this.props.info;\r\n      const eta = this.props.errortotal;\r\n      const indices = this.props.indices;\r\n      const conclusion = this.props.conclusion;\r\n      const errores = this.props.errores;\r\n      const data2 = data.map((datum, i) => ({ x: datum.x, y: indices[i] }));\r\n\r\n      var dataX = []\r\n      for (let i=0; i < 20; i++) { dataX.push(data[i].x) }\r\n      for (let i=0; i < 20; i++) { if (isNaN(dataX[i])) dataX[i] = 0; }\r\n      var valorMax = Math.max(...dataX)\r\n      var maxUp = valorMax + (valorMax * (eta/100))\r\n      var maxDown = valorMax - (valorMax * (eta/100))\r\n      const pendienteUp = 1 + (1*(eta/100))\r\n    \r\n      var dataY = []\r\n      for (let i=0; i < 20; i++) { dataY.push(data[i].y) }\r\n      var valorMaxY = Math.max(...dataY)\r\n    \r\n      const central = [{x: 0, y: 0}, {x: valorMax, y: valorMax }]\r\n    \r\n      var lineaUp = []\r\n      if (valorMaxY > valorMax) {\r\n        lineaUp.push({x: 0, y: 0}, {x: valorMax, y: maxUp})\r\n      } else {\r\n        lineaUp.push({x: 0, y: 0}, {x: (valorMax / pendienteUp), y: valorMax})\r\n      }\r\n    \r\n      const lineaDown = [{x: 0, y: 0}, {x: valorMax, y: maxDown}]\r\n\r\n      const infografico = {\r\n        type:'scatter',\r\n        data:{\r\n            datasets:[\r\n              {\r\n                label:'Puntos',\r\n                showLine: false,\r\n                fill: false,\r\n                pointBackgroundColor: 'rgba(0, 0, 61, 0.8)',\r\n                pointRadius: 2,\r\n                data: data\r\n               },\r\n              {\r\n               label:'Linea Up',\r\n               showLine: true,\r\n               fill: false,\r\n               pointRadius: 0,\r\n               data: lineaUp\r\n              },\r\n              {\r\n               label:'Central',\r\n               showLine: true,\r\n               fill: '-1',\r\n               backgroundColor: 'rgba(255, 227, 255, 0.5)',\r\n               pointRadius: 0,\r\n               data: central\r\n              },\r\n              {\r\n               label:'Linea Down',\r\n               showLine: true,\r\n               fill: '-1',\r\n               backgroundColor: 'rgba(255, 227, 255, 0.5)',\r\n               pointRadius: 0,\r\n               data:lineaDown\r\n              }\r\n            ]\r\n        },\r\n        options: {\r\n          title: {\r\n            display: true,\r\n            text: 'Diagrama de Dispersión',\r\n            fontColor: 'gray',\r\n            fontSize: 15,\r\n            fontStyle: 'normal'\r\n          },\r\n          legend: {\r\n            display: false,\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              ticks: {\r\n                max: valorMaxY\r\n              },\r\n              gridLines: {\r\n                color: \"rgba(0, 0, 0, 0)\",\r\n                },\r\n              scaleLabel: {\r\n                display: true,\r\n                labelString: info[1] + \" \" + info[3]\r\n                  }\r\n            }],\r\n            xAxes: [{\r\n              ticks: {\r\n                max: valorMax\r\n              },\r\n              gridLines: {\r\n                color: \"rgba(0, 0, 0, 0)\",\r\n                },\r\n              scaleLabel: {\r\n                display: true,\r\n                labelString: info[0] + \" \" + info[3]\r\n                }\r\n            }]\r\n          },\r\n         }\r\n      }\r\n\r\n      const infografico2 = {\r\n        type:'scatter',\r\n        data:{\r\n            datasets:[\r\n              {\r\n                label:'Puntos',\r\n                showLine: false,\r\n                fill: false,\r\n                pointBackgroundColor: 'rgba(0, 0, 61, 0.8)',\r\n                pointRadius: 2,\r\n                data: data2\r\n               },\r\n              {\r\n               label:'Linea Up',\r\n               showLine: true,\r\n               fill: false,\r\n               pointRadius: 0,\r\n               data: [{x:0,y:1},{x:valorMax,y:1}]\r\n              },\r\n              {\r\n               label:'Central',\r\n               showLine: true,\r\n               fill: '-1',\r\n               backgroundColor: 'rgba(255, 227, 255, 0.5)',\r\n               pointRadius: 0,\r\n               data: [{x:0,y:0},{x:valorMax,y:0}]\r\n              },\r\n              {\r\n               label:'Linea Down',\r\n               showLine: true,\r\n               fill: '-1',\r\n               backgroundColor: 'rgba(255, 227, 255, 0.5)',\r\n               pointRadius: 0,\r\n               data:[{x:0,y:-1},{x:valorMax,y:-1}]\r\n              }\r\n            ]\r\n        },\r\n        options: {\r\n          title: {\r\n            display: true,\r\n            text: 'Diagrama de Bland-Altman',\r\n            fontColor: 'gray',\r\n            fontSize: 15,\r\n            fontStyle: 'normal'\r\n          },\r\n          legend: {\r\n            display: false,\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              ticks: {\r\n                max: 2,\r\n                min: -2,\r\n              },\r\n              gridLines: {\r\n                color: \"rgba(0, 0, 0, 0)\",\r\n                },\r\n              scaleLabel: {\r\n                display: true,\r\n                labelString: \"Indice de Error\"\r\n                  }\r\n            }],\r\n            xAxes: [{\r\n              ticks: {\r\n                max: valorMax\r\n              },\r\n              gridLines: {\r\n                color: \"rgba(0, 0, 0, 0)\",\r\n                },\r\n              scaleLabel: {\r\n                display: true,\r\n                labelString: info[0] + \" \" + info[3]\r\n                }\r\n            }]\r\n          },\r\n         }\r\n      }\r\n\r\n      return (\r\n        <div className=\"mr-4 ml-4 mb-4\">\r\n          {/* Titulo */}\r\n          <Grid  container direction=\"row\" justifyContent=\"space-around\" alignItems=\"flex-start\" spacing={2}>\r\n            <Grid item xs={12}>\r\n              <hr/>\r\n              <h2 className=\"text-center\">Comparación de Instrumentos</h2>\r\n              <hr/>\r\n            </Grid>\r\n            {/* Gráficos */}\r\n            <Grid item xs={6}>\r\n              <Grid item xs={6}>\r\n                <img alt=\"grafico\" src={\"https://quickchart.io/chart?width=280&height=200&c=\" + JSON.stringify(infografico)}/>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item  xs={6}>\r\n              <Grid item >\r\n                <img alt=\"grafico\" src={\"https://quickchart.io/chart?width=280&height=200&c=\" + JSON.stringify(infografico2)}/>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          {/* Texto */}\r\n          <Grid container direction=\"row\" justifyContent=\"space-around\" alignItems=\"flex-start\" spacing={2}>\r\n            <Grid item xs={12} >\r\n              <hr/>\r\n              <h2 className=\"text-center\">Evaluación de Resultados</h2>\r\n              <hr/>\r\n            </Grid>\r\n            <Grid item xs={12} >\r\n              <p style={{fontSize: \"25px\", textAlign: \"justify\"}}>El analito {info[2]} fue analizado utilizando los   \r\n                instrumentos {info[0]} y {info[1]} para determinar si los resultados de estos son equivalentes con un Error Total Permitido de {eta}%.\r\n                Para realizar esto se compararon 20 muestras distintas con un rango de {Math.min(...dataX)} a {Math.max(...dataX)} {info[3]}. Con esto se concluye que los resultados de los \r\n                instrumentos <b>{conclusion(errores).toUpperCase()}</b> son equivalentes. El Índice de Error promedio fue de {(indices.reduce((a,b) => a + b, 0) / indices.length).toFixed(2)}, con un rango de {Math.min(...indices)} a {Math.max(...indices)}.</p>\r\n            </Grid>\r\n            <Grid item xs={12} >\r\n              <hr/>\r\n              <h2 className=\"text-center\">Tabla de Resultados</h2>\r\n            </Grid>\r\n            <Grid item xs={6} >\r\n              <table className=\"table\" style={{fontSize: \"25px\", textAlign: \"center\"}}>\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">Muestra</th>\r\n                    <th scope=\"col\">{info[0]}</th>\r\n                    <th scope=\"col\">{info[1]}</th>\r\n                    <th scope=\"col\">IndErr</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <th scope=\"row\">1</th>\r\n                    <td>{dataX[0]}</td>\r\n                    <td>{dataY[0]}</td>\r\n                    <td>{indices[0]}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">2</th>\r\n                    <td>{dataX[1]}</td>\r\n                    <td>{dataY[1]}</td>\r\n                    <td>{indices[1]}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">3</th>\r\n                    <td>{dataX[2]}</td>\r\n                    <td>{dataY[2]}</td>\r\n                    <td>{indices[2]}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">4</th>\r\n                    <td>{dataX[3]}</td>\r\n                    <td>{dataY[3]}</td>\r\n                    <td>{indices[3]}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">5</th>\r\n                    <td>{dataX[4]}</td>\r\n                    <td>{dataY[4]}</td>\r\n                    <td>{indices[4]}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">6</th>\r\n                    <td>{dataX[5]}</td>\r\n                    <td>{dataY[5]}</td>\r\n                    <td>{indices[5]}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">7</th>\r\n                    <td>{dataX[6]}</td>\r\n                    <td>{dataY[6]}</td>\r\n                    <td>{indices[6]}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">8</th>\r\n                    <td>{dataX[7]}</td>\r\n                    <td>{dataY[7]}</td>\r\n                    <td>{indices[7]}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">9</th>\r\n                    <td>{dataX[8]}</td>\r\n                    <td>{dataY[8]}</td>\r\n                    <td>{indices[8]}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">10</th>\r\n                    <td>{dataX[9]}</td>\r\n                    <td>{dataY[9]}</td>\r\n                    <td>{indices[9]}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </Grid>\r\n            <Grid item xs={6} >\r\n              <table className=\"table\" style={{fontSize: \"25px\", textAlign: \"center\"}}>\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">Muestra</th>\r\n                    <th scope=\"col\">{info[0]}</th>\r\n                    <th scope=\"col\">{info[1]}</th>\r\n                    <th scope=\"col\">IndErr</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <th scope=\"row\">11</th>\r\n                    <td>{dataX[10]}</td>\r\n                    <td>{dataY[10]}</td>\r\n                    <td>{indices[10]}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">12</th>\r\n                    <td>{dataX[11]}</td>\r\n                    <td>{dataY[11]}</td>\r\n                    <td>{indices[11]}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">13</th>\r\n                    <td>{dataX[12]}</td>\r\n                    <td>{dataY[12]}</td>\r\n                    <td>{indices[12]}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">14</th>\r\n                    <td>{dataX[13]}</td>\r\n                    <td>{dataY[13]}</td>\r\n                    <td>{indices[13]}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">15</th>\r\n                    <td>{dataX[14]}</td>\r\n                    <td>{dataY[14]}</td>\r\n                    <td>{indices[14]}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">16</th>\r\n                    <td>{dataX[15]}</td>\r\n                    <td>{dataY[15]}</td>\r\n                    <td>{indices[15]}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">17</th>\r\n                    <td>{dataX[16]}</td>\r\n                    <td>{dataY[16]}</td>\r\n                    <td>{indices[16]}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">18</th>\r\n                    <td>{dataX[17]}</td>\r\n                    <td>{dataY[17]}</td>\r\n                    <td>{indices[17]}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">19</th>\r\n                    <td>{dataX[18]}</td>\r\n                    <td>{dataY[18]}</td>\r\n                    <td>{indices[18]}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">20</th>\r\n                    <td>{dataX[19]}</td>\r\n                    <td>{dataY[19]}</td>\r\n                    <td>{indices[19]}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </Grid>\r\n          </Grid>\r\n        </div>  \r\n      );\r\n    }\r\n}\r\n\r\nconst Pdf2 = (props) => {\r\n    const data = props.data;\r\n    const info = props.info;\r\n    const eta = props.errortotal;\r\n    const indices = props.indices;\r\n    const conclusion = props.conclusion;\r\n    const errores = props.errores;\r\n    const componentRef = useRef();\r\n\r\n\r\n    return (\r\n      <Fragment >\r\n        <ReactToPrint\r\n          trigger={() => <Button color=\"primary\" variant=\"contained\">Imprimir Informe</Button>}\r\n          content={() => componentRef.current}\r\n        />\r\n        <div style={{display: 'none'}}>\r\n            <ComponentToPrint errores={errores} conclusion={conclusion} indices={indices} data={data} errortotal={eta} info={info} ref={componentRef} />\r\n        </div>\r\n      </Fragment>\r\n    );\r\n};\r\n\r\n\r\nexport default Pdf2;","import React, {Fragment, useState} from \"react\";\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport Grow from '@material-ui/core/Grow'\r\nimport Button from '@material-ui/core/Button'\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport Chip from '@material-ui/core/Chip'\r\nimport imagen1 from './static/imagen1.svg'\r\nimport imagen2 from './static/imagen2.svg'\r\nimport imagen3 from './static/imagen3.svg'\r\nimport imagen4 from './static/imagen4.svg'\r\nimport Swiper from 'react-id-swiper';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Grow timeout={2000} ref={ref} {...props} />;\r\n  });\r\n\r\n\r\nconst Instrucciones = () => {\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    \r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const params = {\r\n        centeredSlides: true,\r\n        speed: 600,\r\n        pagination: {\r\n          el: '.swiper-pagination',\r\n          type: 'progressbar',\r\n        },\r\n        navigation: {\r\n          nextEl: '.swiper-button-next',\r\n          prevEl: '.swiper-button-prev',\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Chip\r\n                className=\"instrucciones\"\r\n                icon={<MenuBookIcon/>}\r\n                label={<b>Instrucciones</b>}\r\n                clickable\r\n                color=\"default\"\r\n                onClick={handleClickOpen}\r\n            />\r\n            <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n                <div>\r\n                    <Button fullWidth color=\"inherit\" onClick={handleClose}>\r\n                        Volver\r\n                    </Button>\r\n                </div>\r\n                <div className=\"antesSwiper\">\r\n                    <Swiper {...params} style={{height: \"100%\"}}>\r\n                        <div style={{background: \"#8ae3a8\"}}>\r\n                            <div className=\"swiper-slide-container\">\r\n                                <div className=\"swiperItem\">\r\n                                    <h2>1- Selección de muestras</h2>\r\n                                    <div className=\"swiperImg\"><img className=\"imagen1\" src={imagen1} alt=\"imagen\"/></div>\r\n                                    <p>Seleccionar 20 muestras que abarquen niveles bajos, normales y elevados del analito.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{background: \"#b09684\"}}>\r\n                            <div className=\"swiper-slide-container\">\r\n                                <div className=\"swiperItem\">\r\n                                    <h2>2- Análisis de muestras en ambos instrumentos</h2>\r\n                                    <div className=\"swiperImg\"><img src={imagen2} alt=\"imagen\"/></div>\r\n                                    <p>El análisis debe realizarse el mismo día como si fueran muestras normales.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{background: \"#7ab0de\"}}>\r\n                            <div className=\"swiper-slide-container\">\r\n                                <div className=\"swiperItem\">\r\n                                    <h2>3- Ingreso de datos y resultados</h2>\r\n                                    <div className=\"swiperImg\"><img src={imagen3} alt=\"imagen\"/></div>\r\n                                    <p>Completa los datos necesarios para realizar el estudio e informe en la aplicación.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{background: \"white\"}}>\r\n                            <div className=\"swiper-slide-container\">\r\n                                <div className=\"swiperItem\">\r\n                                    <h2 style={{color: \"black\"}}>4- Genera tu informe</h2>\r\n                                    <div className=\"swiperImg\"><img className=\"informe\" src={imagen4} alt=\"imagen\"/></div>\r\n                                    <p style={{color: \"black\"}}>Inmediatamente luego de ingresar todos los resultados y datos podrás generar el informe describiendo el estudio.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Swiper>\r\n                </div>\r\n               \r\n            </Dialog>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default Instrucciones;","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ReactDataGrid from \"react-data-grid\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport {useLocalStorage} from \"./localstorage\"\r\nimport Grafico from \"./grafico\"\r\nimport GraficoIndice from \"./graficoindice\"\r\nimport Slider from '@material-ui/core/Slider';\r\nimport IndiceError from \"./indiceerror\"\r\nimport Chip from '@material-ui/core/Chip';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Informacion from './informacion'\r\nimport Conclusion from './conclusion'\r\nimport Pdf2 from './pdf2'\r\nimport Logo from './logo.png'\r\nimport Instrucciones from './instrucciones'\r\n\r\nconst columns = [\r\n    { key: \"muestra\", name: \"\", editable: false, frozen: true, width: 35 },\r\n    { key: \"equipoX\", name: \"Equipo X\", editable: true },\r\n    { key: \"equipoY\", name: \"Equipo Y\", editable: true },\r\n];\r\n\r\n//Crea las filas con los datos de muestra, equipox y equipo Y por ahora son 20\r\nconst rows = Array.from(Array(20), (_, i) => ({ muestra: i + 1, equipoX: \"\", equipoY: \"\" }));\r\n\r\nconst Contenido = () => {\r\n    const [eta, setEta] = useLocalStorage('eta', 50) // valor de error total permitido\r\n    const [filas, setFilas] = useLocalStorage('datos', rows) // valores de las celdas, 'eta' y 'datos' son los nombres en el localstorage, no hacen nada en el codigo\r\n    const [equipo1, setEquipo1] = useLocalStorage('equipo1', \"\")\r\n    const [equipo2, setEquipo2] = useLocalStorage('equipo2', \"\")\r\n    const [analito, setAnalito] = useLocalStorage('analito', \"\")\r\n    const [umedida, setUmedida] = useLocalStorage('umedida', \"\")\r\n\r\n    const data = filas.map(fila => ({ x: parseInt(fila.equipoX), y: parseInt(fila.equipoY) })); //aca paso los datos desde el grid tittle es X y complete es Y\r\n      \r\n    const indices = data.reduce((acc, datum, i) => { //genero los indices\r\n        acc[`i${i+1}`] = parseFloat(((datum.y - datum.x)/((eta / 100) * datum.x)).toFixed(2));\r\n        return acc;\r\n    }, {});\r\n  \r\n    const indicesN = Object.values(indices);\r\n  \r\n    const errores = indicesN.filter(n => n > 1 || n < -1);\r\n  \r\n    const conclusion = err => err.length >= 2 ? \"No\" : \"Si\";\r\n\r\n    const onGridRowsUpdated = ({ fromRow, toRow, updated }) => {\r\n        setFilas(() => {\r\n          const rows = filas.slice();\r\n          for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = { ...rows[i], ...updated };\r\n          }\r\n          return rows;\r\n        });\r\n    };\r\n\r\n    const addRow = () => {\r\n        // Create a new row object with the data for the new row\r\n        const newRow = { muestra: filas.length + 1, equipoX: \"\", equipoY: \"\" };\r\n      \r\n        // Add the new row to the filas array\r\n        setFilas((filas) => {\r\n          return [...filas, newRow];\r\n        });\r\n    };\r\n      \r\n    const deleteRow = () => {\r\n        // Check if the filas array has more than 21 elements\r\n        if (filas.length > 20) {\r\n          // Remove the last element from the filas array\r\n          setFilas((filas) => {\r\n            return filas.slice(0, filas.length - 1);\r\n          });\r\n        }\r\n    };\r\n\r\n    const resetState = () => {\r\n      if (window.confirm(\"¿Estás seguro de querer borrar los datos?\")){\r\n      setFilas(rows)\r\n    }};\r\n\r\n    const handleEquipo1 = (e) =>{\r\n        setEquipo1(e.target.value)\r\n    }\r\n\r\n    const handleEquipo2 = (e) =>{\r\n        setEquipo2(e.target.value)\r\n    }\r\n\r\n    const handleAnalito = (e) =>{\r\n        setAnalito(e.target.value)\r\n    }\r\n\r\n    const handleUmedida = (e) =>{\r\n        setUmedida(e.target.value)\r\n    }\r\n\r\n    const handleEta = (e, v) => {\r\n        setEta(v)\r\n    }\r\n\r\n    const onRowsRendered = ({ stopIndex }) => {\r\n        // Scroll the grid to the last rendered row\r\n        ReactDataGrid.scrollToRow(stopIndex);\r\n    };\r\n\r\n    return (\r\n            <Grid   \r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"space-evenly\"\r\n                alignItems=\"stretch\"\r\n                spacing={2}\r\n            >\r\n                <Grid item xs={12}>\r\n                    <AppBar \r\n                    \r\n                        position=\"static\"\r\n                        className=\"p-3 rounded-top\"\r\n                    >\r\n                        <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={1}>\r\n                            <Grid item md={1} xs={2} ><img className=\"ml-2\" width=\"60%\" src={Logo} alt=\"Logo Comparación de Instrumentos\" /></Grid>\r\n                            <Grid item md={9} xs={10}><h4><b>Comparación de instrumentos</b></h4></Grid>\r\n                            <Grid item md={2} xs={12}><Instrucciones/></Grid>\r\n                        </Grid>\r\n                    </AppBar>\r\n                </Grid>\r\n                <Grid item md={4} xs={12}>\r\n                    <Paper className=\"p-4\">\r\n                        <div>\r\n                            <Informacion info={[equipo1, equipo2, analito, umedida]} \r\n                            handleAnalito={handleAnalito} handleUmedida={handleUmedida} handleEquipo1={handleEquipo1}\r\n                            handleEquipo2={handleEquipo2}/>\r\n                            <div className=\"card breadcrumb mt-4\"><h6 className=\"text-center\">Error Total Permitido:</h6>\r\n                                <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={2}>\r\n                                    <Grid item md={9} xs={9}>\r\n                                        <Slider\r\n                                            className=\"mt-2\"\r\n                                            defaultValue={eta}\r\n                                            aria-labelledby=\"discrete-slider\"\r\n                                            valueLabelDisplay=\"auto\"\r\n                                            step={1}\r\n                                            min={0}\r\n                                            max={100}\r\n                                            color=\"primary\"\r\n                                            onChangeCommitted={handleEta} // aca le paso el valor del Eta al state\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item md={3} xs={3}>\r\n                                        <Chip className=\"chipETA\" label={eta + \"%\"} color=\"primary\"/>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </div>\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item md={3} xs={12}>\r\n                <Paper className=\"p-4\">\r\n                        <h5 style={{textAlign: \"center\"}}>Ingreso de Resultados</h5>\r\n                        <hr/>\r\n                        <div>\r\n                            <ReactDataGrid\r\n                            columns={columns}\r\n                            rowGetter={i => filas[i]}\r\n                            rowsCount={filas.length}\r\n                            onGridRowsUpdated={onGridRowsUpdated}\r\n                            onRowsRendered={onRowsRendered}\r\n                            enableCellSelect={true}\r\n                            rowSelection={false}\r\n                            enableRowSelect={null}\r\n                            minHeight={304}\r\n                            />\r\n\r\n                            <ButtonGroup\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            fullWidth={true}\r\n                            className=\"mt-2\"\r\n                            >\r\n                                <Button onClick={resetState}>Borrar data</Button>\r\n                                <Button onClick={addRow}>Añadir fila</Button>\r\n                                <Button onClick={deleteRow}>Borrar fila</Button>\r\n                            </ButtonGroup>\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item md={5} xs={12}>\r\n                    <Paper className=\"p-4\">\r\n                        <Grafico data={data} errortotal={eta} info={[equipo1, equipo2, analito, umedida]}/>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item md={3} xs={12}>\r\n                    <IndiceError indices={indicesN} />\r\n                </Grid>  \r\n                <Grid item md={4} xs={12}>\r\n                    <Paper className=\"p-4\">\r\n                        <Conclusion errores={errores} conclusion={conclusion} indices={indicesN} data={data}/>\r\n                    </Paper>\r\n                </Grid>  \r\n                <Grid item md={5} xs={12}>\r\n                    <Paper className=\"p-4\">\r\n                        <GraficoIndice data={filas} indices={indicesN} info={[equipo1, equipo2, analito, umedida]} />\r\n                    </Paper>\r\n                </Grid>\r\n                <Pdf2 errores={errores} conclusion={conclusion} data={data} errortotal={eta} info={[equipo1, equipo2, analito, umedida,]} indices={indicesN} />\r\n            </Grid>\r\n         );\r\n    }\r\n\r\nexport default Contenido;","import React from \"react\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Contenido from \"./tabla-core\";\r\n\r\n// estilos de la pagina\r\n\r\n// comienzo de la app\r\nconst MenuLateral = () => {\r\n  return (\r\n    <Grid style={{padding: 5}}>\r\n      <Contenido padding={2}/>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MenuLateral;\r\n","import React, { Fragment, useEffect } from \"react\";\nimport './App.css';\nimport MenuLateral from './components/principal';\n\nconst App = () => {\n\n  useEffect(() => {\n    var myobj = document.getElementById(\"probando\");\n    myobj.remove();\n  })\n\n  return (\n    <Fragment>\n      <MenuLateral/>\n      <footer>\n      <p className=\"foooter\">Creado por Giorgio Cabrera Sepúlveda</p>\n      </footer>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('aplicacion'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}